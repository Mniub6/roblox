local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local library = loadstring(game:HttpGet("https://pastefy.app/ud7GghOq/raw", true))()
local devv   = require(game:GetService("ReplicatedStorage").devv)
local Signal = devv.load("Signal")
game.TextChatService.ChatWindowConfiguration.Enabled = true
game:GetService("RunService").Heartbeat:Connect(function()
workspace.CurrentCamera.FieldOfView = 120
end)


local function isFriend(targetPlayer)return localPlayer:IsFriendsWith(targetPlayer.UserId)end local function teleportBehindTarget(targetPlayer)local targetCharacter=targetPlayer.Character if not targetCharacter then return end if targetCharacter:FindFirstChild('ForceField')or isFriend(targetPlayer)then return end local targetRoot=targetCharacter:FindFirstChild("HumanoidRootPart")local localCharacter=localPlayer.Character local localRoot=localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")if targetRoot and localRoot then local behindCFrame=targetRoot.CFrame * CFrame.new(0,0,3)localRoot.CFrame=behindCFrame end end local function startTeleportLoop()if teleportLoop then teleportLoop:Disconnect()end teleportLoop=RunService.Heartbeat:Connect(function()for _,player in ipairs(Players:GetPlayers())do if player ~=localPlayer then teleportBehindTarget(player)task.wait(1)end end end)end local function stopTeleportLoop()if teleportLoop then teleportLoop:Disconnect()teleportLoop=nil end end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local devv = require(game:GetService('ReplicatedStorage').devv)
local item = devv.load('v3item')

local speed=1 local tpEnabled=true local heartbeatConnection=nil local character,humanoid local function setupCharacter()character=LocalPlayer.Character if character then humanoid=character:WaitForChild("Humanoid")humanoid.Died:Connect(function()repeat task.wait()until LocalPlayer.Character ~=nil setupCharacter()if tpEnabled then startTPWalk()end end)end end local function startTPWalk()if heartbeatConnection then heartbeatConnection:Disconnect()end heartbeatConnection=RunService.Heartbeat:Connect(function()if not tpEnabled or not character or not humanoid or humanoid.Health <=0 then return end if humanoid.MoveDirection.Magnitude > 0 then local currentCFrame=character.PrimaryPart.CFrame local newPosition=currentCFrame.Position +(humanoid.MoveDirection * speed)character:SetPrimaryPartCFrame(CFrame.new(newPosition)* currentCFrame.Rotation)end end)end local function stopTPWalk()if heartbeatConnection then heartbeatConnection:Disconnect()heartbeatConnection=nil end end LocalPlayer.CharacterAdded:Connect(function(newCharacter)character=newCharacter setupCharacter()end)setupCharacter()

local autoCollectConnections={}local function setupAutoCollect(toggleVar,itemNames,sizeFilter,toggleName)return function(state)toggleVar=state if state then if autoCollectConnections[toggleName]then autoCollectConnections[toggleName]:Disconnect()end autoCollectConnections[toggleName]=RunService.Heartbeat:Connect(function()if character and humanoidRootPart then local collected=false for _,item in pairs(workspace.Game.Entities.ItemPickup:GetChildren())do for _,part in pairs(item:GetDescendants())do if(part:IsA("MeshPart")or part:IsA("Part"))then local prompt=part:FindFirstChildOfClass("ProximityPrompt")if prompt then local matchName=false if type(itemNames)=="table" then for _,name in pairs(itemNames)do if prompt.ObjectText==name then matchName=true break end end else matchName=prompt.ObjectText==itemNames end local matchSize=true if sizeFilter then matchSize=part.Size==sizeFilter end if matchName and matchSize then humanoidRootPart.CFrame=part.CFrame * CFrame.new(0,2,0)task.wait(0.1)for i=1,10 do fireproximityprompt(prompt)task.wait(0.1)end collected=true break end end end end if collected then break end end if collected then humanoidRootPart.CFrame=CFrame.new(1881.17371,-45.2568588,-183.409271)end end end)else if autoCollectConnections[toggleName]then autoCollectConnections[toggleName]:Disconnect()autoCollectConnections[toggleName]=nil end end end end local Players=game:GetService("Players")local player=Players.LocalPlayer if not player then Players:GetPropertyChangedSignal("LocalPlayer"):Wait()player=Players.LocalPlayer end local function onCharacterAdded(character)local humanoid=character:WaitForChild("Humanoid",10)character:WaitForChild("HumanoidRootPart",10)if humanoid then humanoid.UseJumpPower=true end end if player.Character then onCharacterAdded(player.Character)end player.CharacterAdded:Connect(onCharacterAdded)
local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local SnowRUN = game:GetService("RunService")
local b1 = require(game:GetService('ReplicatedStorage').devv).load('v3item').inventory.items
local window = library:new("二改 Hub")
Magisk:Dropdown({
    Title = "选择一个皮肤",
    Values = { 
        "烟火", "虚空", "纯金", "暗物质", "反物质", "神秘", "虚空神秘", "战术", "纯金战术", 
        "白未来", "黑未来", "圣诞未来", "礼物包装", "猩红", "收割者", "虚空收割者", "圣诞玩具",
        "荒地", "隐形", "像素", "钻石像素", "黄金零下", "绿水晶", "生物", "樱花", "精英", 
        "黑樱花", "彩虹激光", "蓝水晶", "紫水晶", "红水晶", "零下", "虚空射线", "冰冻钻石",
        "虚空梦魇", "金雪", "爱国者", "MM2", "声望", "酷化", "蒸汽", "海盗", "玫瑰", "黑玫瑰",
        "激光", "烟花", "诅咒背瓜", "大炮", "财富", "黄金大炮", "四叶草", "自由", "黑曜石", "赛博朋克"
    },
    Callback = function(Value) 
        if Value == "烟火" then
            skinsec = "Sparkler"
        elseif Value == "虚空" then
            skinsec = "Void"
        elseif Value == "纯金" then
            skinsec = "Solid Gold"
        elseif Value == "暗物质" then
            skinsec = "Dark Matter"
        elseif Value == "反物质" then
            skinsec = "Anti Matter"
        elseif Value == "神秘" then
            skinsec = "Hystic"
        elseif Value == "虚空神秘" then
            skinsec = "Void Mystic"
        elseif Value == "战术" then
            skinsec = "Tactical"
        elseif Value == "纯金战术" then
            skinsec = "Solid Gold Tactical"
        elseif Value == "白未来" then
            skinsec = "Future White"
        elseif Value == "黑未来" then
            skinsec = "Future Black"
        elseif Value == "圣诞未来" then
            skinsec = "Christmas Future"
        elseif Value == "礼物包装" then
            skinsec = "Gift Wrapped"
        elseif Value == "猩红" then
            skinsec = "Crimson Blood"
        elseif Value == "收割者" then
            skinsec = "Reaper"
        elseif Value == "虚空收割者" then
            skinsec = "Void Reaper"
        elseif Value == "圣诞玩具" then
            skinsec = "Christmas Toy"
        elseif Value == "荒地" then
            skinsec = "Wasteland"
        elseif Value == "隐形" then
            skinsec = "Invisible"
        elseif Value == "像素" then
            skinsec = "Pixel"
        elseif Value == "钻石像素" then
            skinsec = "Diamond Pixel"
        elseif Value == "黄金零下" then
            skinsec = "Frozen-Gold"
        elseif Value == "绿水晶" then
            skinsec = "Atomic Nature"
        elseif Value == "生物" then
            skinsec = "Biohazard"
        elseif Value == "樱花" then
            skinsec = "Sakura"
        elseif Value == "精英" then
            skinsec = "Elite"
        elseif Value == "黑樱花" then
            skinsec = "Death Blossom-Gold"
        elseif Value == "彩虹激光" then
            skinsec = "Rainbowlaser"
        elseif Value == "蓝水晶" then
            skinsec = "Atomic Water"
        elseif Value == "紫水晶" then
            skinsec = "Atomic Amethyst"
        elseif Value == "红水晶" then
            skinsec = "Atomic Flame"
        elseif Value == "零下" then
            skinsec = "Sub-Zero"
        elseif Value == "虚空射线" then
            skinsec = "Void-Ray"
        elseif Value == "冰冻钻石" then
            skinsec = "Frozen Diamond"
        elseif Value == "虚空梦魇" then
            skinsec = "Void Nightmare"
        elseif Value == "金雪" then
            skinsec = "Golden Snow"
        elseif Value == "爱国者" then
            skinsec = "Patriot"
        elseif Value == "MM2" then
            skinsec = "MM2 Barrett"
        elseif Value == "声望" then
            skinsec = "Prestige Barnett"
        elseif Value == "酷化" then
            skinsec = "Skin Walter"
        elseif Value == "蒸汽" then
            skinsec = "Steampunk"
        elseif Value == "海盗" then
            skinsec = "Pirate"
        elseif Value == "玫瑰" then
            skinsec = "Rose"
        elseif Value == "黑玫瑰" then
            skinsec = "Black Rose"
        elseif Value == "激光" then
            skinsec = "Hyperlaser"
        elseif Value == "烟花" then
            skinsec = "Firework"
        elseif Value == "诅咒背瓜" then
            skinsec = "Cursed Pumpkin"
        elseif Value == "大炮" then
            skinsec = "Cannon"
        elseif Value == "财富" then
            skinsec = "Firework"
        elseif Value == "黄金大炮" then
            skinsec = "Gold Cannon"
        elseif Value == "四叶草" then
            skinsec = "Lucky Clover"
        elseif Value == "自由" then
            skinsec = "Freedom"
        elseif Value == "黑曜石" then
            skinsec = "Obsidian"
        elseif Value == "赛博朋克" then
            skinsec = "Cyberpunk"
        end
    end
})
Magisk:Toggle({
    Title = "开启美化",
    --Image = "bird",
    Value = false,
    Callback = function(start) 
autoskin = start
if autoskin then
local it = require(game:GetService("ReplicatedStorage").devv).load("v3item").inventory
local b1 = require(game:GetService('ReplicatedStorage').devv).load('v3item').inventory.items
for i, item in next, b1 do 
if item.type == "Gun" then
it.skinUpdate(item.name, skinsec)
end
end
end
end
})
